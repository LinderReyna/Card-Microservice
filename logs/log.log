06-01-2023 03:02:06.364 [main] INFO  c.n.c.m.CardMicroserviceApplicationTests.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
06-01-2023 03:02:11.564 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
06-01-2023 03:02:11.828 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 254 ms. Found 1 Reactive MongoDB repository interfaces.
06-01-2023 03:02:12.293 [main] INFO  o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=7c1c22f8-270f-3f67-88fe-96c104207a4e
06-01-2023 03:02:12.414 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'com.nttdata.card.microservice.client.AccountClient' of type [reactivefeign.spring.config.ReactiveFeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.416 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'com.nttdata.card.microservice.client.ConsumptionClient' of type [reactivefeign.spring.config.ReactiveFeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.418 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'com.nttdata.card.microservice.client.CustomerClient' of type [reactivefeign.spring.config.ReactiveFeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.425 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'com.nttdata.card.microservice.client.ProductClient' of type [reactivefeign.spring.config.ReactiveFeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.427 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'com.nttdata.card.microservice.client.TransactionClient' of type [reactivefeign.spring.config.ReactiveFeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.978 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.985 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:12.995 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-01-2023 03:02:14.578 [main] INFO  org.mongodb.driver.client.info - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./11.0.17+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1fa18f87, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1d9bd1d6], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@18ac4af6]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@117fb9ba], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
06-01-2023 03:02:14.725 [main] WARN  o.s.data.convert.CustomConversions.register - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
06-01-2023 03:02:15.136 [main] WARN  o.s.data.convert.CustomConversions.register - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
06-01-2023 03:02:15.233 [cluster-rtt-ClusterId{value='63b7d586e85db93b3723793e', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:2, serverValue:1011}] to localhost:27017
06-01-2023 03:02:15.231 [cluster-ClusterId{value='63b7d586e85db93b3723793e', description='null'}-localhost:27017] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:1, serverValue:1012}] to localhost:27017
06-01-2023 03:02:15.238 [cluster-ClusterId{value='63b7d586e85db93b3723793e', description='null'}-localhost:27017] INFO  org.mongodb.driver.cluster.info - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=145887800}
06-01-2023 03:02:15.730 [nioEventLoopGroup-2-3] INFO  org.mongodb.driver.connection.info - Opened connection [connectionId{localValue:3, serverValue:1013}] to localhost:27017
06-01-2023 03:02:21.006 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 1 endpoint(s) beneath base path '/actuator'
06-01-2023 03:02:22.300 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
06-01-2023 03:02:22.571 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
06-01-2023 03:02:22.702 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
06-01-2023 03:02:22.841 [main] INFO  c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
06-01-2023 03:02:22.851 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
06-01-2023 03:02:22.891 [main] INFO  c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
06-01-2023 03:02:22.891 [main] INFO  c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
06-01-2023 03:02:22.892 [main] INFO  c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
06-01-2023 03:02:22.892 [main] INFO  c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
06-01-2023 03:02:22.893 [main] INFO  c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
06-01-2023 03:02:22.893 [main] INFO  c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
06-01-2023 03:02:22.894 [main] INFO  c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
06-01-2023 03:02:23.389 [main] INFO  c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
06-01-2023 03:02:23.396 [main] INFO  c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
06-01-2023 03:02:23.400 [main] INFO  c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
06-01-2023 03:02:23.410 [main] INFO  c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1672992143408 with initial instances count: 7
06-01-2023 03:02:23.430 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application CARD-MICROSERVICE with eureka with status UP
06-01-2023 03:02:23.431 [main] INFO  c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1672992143431, current=UP, previous=STARTING]
06-01-2023 03:02:23.436 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_CARD-MICROSERVICE/card-microservice:14c42aa9-55ac-46ff-b409-172eb65e81f0: registering service...
06-01-2023 03:02:23.475 [main] INFO  c.n.c.m.CardMicroserviceApplicationTests.logStarted - Started CardMicroserviceApplicationTests in 20.49 seconds (JVM running for 23.031)
06-01-2023 03:02:23.521 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_CARD-MICROSERVICE/card-microservice:14c42aa9-55ac-46ff-b409-172eb65e81f0 - registration status: 204
06-01-2023 03:02:24.437 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application CARD-MICROSERVICE with eureka with status DOWN
06-01-2023 03:02:24.438 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1672992144438, current=DOWN, previous=UP]
06-01-2023 03:02:24.438 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_CARD-MICROSERVICE/card-microservice:14c42aa9-55ac-46ff-b409-172eb65e81f0: registering service...
06-01-2023 03:02:24.447 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_CARD-MICROSERVICE/card-microservice:14c42aa9-55ac-46ff-b409-172eb65e81f0 - registration status: 204
06-01-2023 03:02:28.587 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
06-01-2023 03:02:31.594 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
06-01-2023 03:02:31.609 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_CARD-MICROSERVICE/card-microservice:14c42aa9-55ac-46ff-b409-172eb65e81f0 - deregister  status: 200
06-01-2023 03:02:31.614 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
