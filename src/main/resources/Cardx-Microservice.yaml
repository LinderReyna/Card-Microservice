openapi: 3.0.0
info:
  title: Card Microservice
  description: Card Microservice
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/LINDERREYNAE/Card-Microservice/1.0.0
    description: SwaggerHub API Auto Mocking
paths:
  /card:
    post:
      tags:
        - Card
      summary: Add a new Card to the database
      description: Add a new Card to the database
      operationId: addCard
      requestBody:
        description: Create a new Card in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        "405":
          description: Invalid input
    get:
      tags:
        - Card
      summary: Find Cards
      description: Returns a all Cards
      operationId: getCards
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        "404":
          description: Invalid status value
  /card/{id}:
    put:
      tags:
        - Card
      summary: Update an existing Card
      description: Update an existing Card by Id
      operationId: updateCard
      parameters:
        - name: id
          in: path
          description: ID of Card to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Card in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
        "405":
          description: Validation exception
    get:
      tags:
        - Card
      summary: Find Card by ID
      description: Returns a single Card
      operationId: findCardById
      parameters:
        - name: id
          in: path
          description: ID of Card to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
    delete:
      tags:
        - Card
      summary: Delete a Card
      description: delete a Card
      operationId: deleteCardById
      parameters:
        - name: id
          in: path
          description: Card id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid Card value
  /card/{cardId}/consumption:
    post:
      tags:
        - Consumption
      summary: Add a new Consumption to the database
      description: Add a new Consumption to the database
      operationId: addConsumption
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new Consumption in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumption'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumption'
        "405":
          description: Invalid input
    get:
      tags:
        - Consumption
      summary: Find Consumptions
      description: Returns a all Consumptions
      operationId: getConsumptions
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consumption'
        "404":
          description: Invalid status value
  /card/{cardId}/consumption/{id}:
    put:
      tags:
        - Consumption
      summary: Update an existing Consumption
      description: Update an existing Consumption by Id
      operationId: updateConsumption
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of Consumption to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Consumption in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumption'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumption'
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
        "405":
          description: Validation exception
    get:
      tags:
        - Consumption
      summary: Find Consumption by ID
      description: Returns a single Consumption
      operationId: findConsumptionById
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of Consumption to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumption'
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
    delete:
      tags:
        - Consumption
      summary: Delete a Consumption
      description: delete a Consumption
      operationId: deleteConsumptionById
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Consumption id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid Consumption value
  /card/{cardId}/payment:
    post:
      tags:
        - Payment
      summary: Add a new Payment to the database
      description: Add a new Payment to the database
      operationId: addPayment
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new Payment in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        "405":
          description: Invalid input
    get:
      tags:
        - Payment
      summary: Find Payments
      description: Returns a all Payments
      operationId: getPayments
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        "404":
          description: Invalid status value
  /card/{cardId}/payment/{id}:
    put:
      tags:
        - Payment
      summary: Update an existing Payment
      description: Update an existing Payment by Id
      operationId: updatePayment
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of Payment to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Payment in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
        "405":
          description: Validation exception
    get:
      tags:
        - Payment
      summary: Find Payment by ID
      description: Returns a single Payment
      operationId: findPaymentById
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of Payment to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
    delete:
      tags:
        - Payment
      summary: Delete a Payment
      description: delete a Payment
      operationId: deletePaymentById
      parameters:
        - name: cardId
          in: path
          description: ID of Card
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Payment id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid Payment value
components:
  schemas:
    BankCredit:
      required:
        - creditCard
      type: object
      properties:
        creditCard:
          type: string
          description: credit card
          example: Clasica
        numberOfCredits:
          type: integer
          description: Number Of Credits
          format: int32
          minimum: 1
          example: 1
    Product:
      readOnly: true
      type: object
      properties:
        id:
          type: string
          description: ID
        type:
          type: string
          description: Product type
        currency:
          type: string
          description: Currency
        description:
          type: string
          description: Description
        bankCredit:
          $ref: '#/components/schemas/BankCredit'
    Personal:
      readOnly: true
      type: object
      properties:
        names:
          type: string
          description: Names
        fatherLastName:
          type: string
          description: Father last name
        motherLastName:
          type: string
          description: Mother last name
        documentType:
          type: string
          description: Document type
        documentNumber:
          type: string
          description: Document number
    Business:
      type: object
      properties:
        legalName:
          type: string
          description: Name
        fullName:
          type: string
          description: Name
        ruc:
          type: string
          description: RUC
    Customer:
      readOnly: true
      type: object
      properties:
        id:
          type: string
          description: ID
        type:
          type: string
          description: Customer type
        personal:
          $ref: '#/components/schemas/Personal'
        business:
          $ref: '#/components/schemas/Business'
        email:
          type: string
          description: Email
        phone:
          type: string
          description: Phone
    Balance:
      required:
        - balanceAmount
        - balanceType
      type: object
      properties:
        balanceAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Balance Amount
          example: 1000.00
        balanceType:
          type: string
          description: Balance Type
          enum:
            - Disponible
            - Contable
            - Retenido
    Account:
      required:
        - accountNumber
        - cci
        - productId
        - titularId
        - status
        - balance
      type: object
      properties:
        id:
          type: string
          readOnly: true
        accountNumber:
          type: string
          minimum: 14
          maximum: 14
          description: Account Number
          example: 19111111111111
        cci:
          type: string
          minimum: 18
          maximum: 18
          description: CCI
          example: 222191111111111112
        productId:
          type: string
          description: Product ID
          example: 6386e2cc35049a3f6bfcfd7b
        product:
          $ref: '#/components/schemas/Product'
        titularId:
          type: array
          items:
            type: string
            description: Titular
            example: 63859d334306d301128cf352
        titular:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Customer'
        signatoryId:
          type: array
          items:
            type: string
            description: Signatory
            example: 63859d334306d301128cf352
        signatory:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Customer'
        status:
          type: string
          description: Status
          enum:
            - Activa
            - Inactiva
            - Bloqueada
        balance:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
    Transaction:
      required:
        - transactionAmount
        - referenceInformation
        - type
        - description
      type: object
      properties:
        id:
          type: string
          readOnly: true
        transactionAmount:
          type: number
          format: currency
          description: Balance Amount
          example: 80.00
        destinationAccountId:
          type: string
          description: Destination Account ID
          example: 10014552211145
        processingDate:
          type: string
          format: date-time
          description: Processing Date
          example: "2022-12-30T20:30:00Z"
        type:
          type: string
          description: Type
          enum:
            - Cargo
            - Abono
        accountId:
          type: string
          description: Account ID
          example: 63859d33434879511128cf352
          readOnly: true
        description:
          type: string
          description: Description
          example: Claro pago telefono
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
    Credit:
      required:
        - billingDay
        - paymentDueDate
        - lastBillingDate
        - creditLineAmount
        - initialBalanceAmount
        - billedInterestsAmount
        - fixedInstallmentsQuantity
        - fixedPayAmount
        - minimumPaymentAmount
      type: object
      properties:
        id:
          type: string
          readOnly: true
        cardId:
          type: string
          description: Card ID
          readOnly: true
        billingDay:
          type: integer
          description: Billing Day
          format: int32
          example: 16
        paymentDueDate:
          type: string
          format: date
          description: Payment Due Date
          example: "2022-12-28"
        lastBillingDate:
          type: string
          format: date
          description: Last Billing Date
          example: "2022-12-30"
        creditLineAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Credit Line Available Amount
          example: 21169.19
        creditLineAvailableAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Credit Line Available Amount
          example: 21169.19
        initialBalanceAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Initial Balance Amount
          example: 300.00
        billedInterestsAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Billed Interests Amount
          example: 2.41
        fixedInstallmentsQuantity:
          type: integer
          format: int32
          minimum: 0
          description: Fixed Installments Quantity
          example: 24
        fixedPayAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Fixed Pay Amount
          example: 0.00
        minimumPaymentAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Minimum Payment Amount
          example: 3161.50
        accruedCurrentBalanceAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Accrued Current Balance Amount
          example: 4500.00
        usedCreditLineAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Used Credit Line Amount
          example: 4500.00
        billedMembershipFeeAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Billed Membership Fee Amount
          example: 0.00
        billedFeeAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Billed Fee Amount
          example: 0.00
        accruedPaymentAmount:
          type: number
          format: currency
          minimum: 0.00
          description: Accrued Payment Amount
          example: 400.00
    Card:
      required:
        - creditCard
        - type
        - status
        - expiration
        - cvv
        - cashWithdrawalAllowed
        - productId
        - titularId
      type: object
      properties:
        id:
          type: string
          readOnly: true
        creditCard:
          type: string
          description: Credit Card ID
          example: 0005412540001454001
        type:
          type: string
          description: Card Type
          enum:
            - Credito
            - Debito
        status:
          type: string
          description: Card Status
          enum:
            - Activa
            - Expirada
            - Bloqueada
        expiration:
          type: string
          format: date
          description: Expiration Date
          example: "2022-12-30"
        cvv:
          type: string
          description: CVV
          example: 123
        cashWithdrawalAllowed:
          type: number
          format: currency
          minimum: 0.00
          description: Cash Withdrawal Allowed
          example: 3000.00
        productId:
          type: string
          description: Product ID
          example: 6386e2cc35049a3f6bfcfd7b
        product:
          $ref: '#/components/schemas/Product'
        titularId:
          type: string
          description: Titular
          example: 63859d334306d301128cf352
        titular:
          $ref: '#/components/schemas/Customer'
        primaryAccountId:
          type: string
          description: Primary Account ID
          example: 6386e2cc35049a3f6bfcfd7b
        associatedAccountId:
          type: array
          items:
            type: string
            description: Associated Account
            example: 63859d334306d301128cf352
        credit:
          $ref: '#/components/schemas/Credit'
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
    Consumption:
      required:
        - cardId
        - amount
        - description
      type: object
      properties:
        id:
          type: string
          readOnly: true
        cardId:
          type: string
          description: Card ID
          readOnly: true
        amount:
          type: number
          format: currency
          description: Amount
          example: 34.98
        description:
          type: string
          description: Description
          example: Claro SA
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
    Payment:
      required:
        - cardId
        - amount
        - installmentQuantity
        - paymentType
        - description
      type: object
      properties:
        id:
          type: string
          readOnly: true
        cardId:
          type: string
          description: Card ID
          readOnly: true
        amount:
          type: number
          format: currency
          description: Amount
          example: 34.98
        balanceAmount:
          type: number
          format: currency
          description: Balance Amount
          example: 34.98
        installmentQuantity:
          type: integer
          format: int32
          minimum: 0
          description: Installment Quantity
          example: 5
        pendingInstallmentQuantity:
          type: integer
          format: int32
          minimum: 0
          description: Pending Installment Quantity
          example: 5
        processDate:
          type: string
          format: date-time
          description: Process Date
          example: "2022-12-30T20:30:00Z"
        isLastBalance:
          type: boolean
          description: is Last Balance
          example: true
        paymentType:
          type: string
          description: Payment Type
          enum:
            - Efectivo
            - Cuenta
        payingCustomerId:
          type: string
          description: Paying Customer ID
          example: 63859d334306d301128cf352
        payingAccountId:
          type: string
          description: Paying Account ID
          example: 6386e2cc35049a3f6bfcfd7b
        description:
          type: string
          description: Description
          example: Claro SA
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2022-12-30T20:30:00Z"
          readOnly: true
  requestBodies:
    Account:
      description: Account object that needs to be added to the database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
    Payment:
      description: Payment object that needs to be added to the database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'